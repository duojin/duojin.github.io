<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[00.组件版本和配置策略]]></title>
    <url>%2F2019%2F08%2F28%2F00-%E7%BB%84%E4%BB%B6%E7%89%88%E6%9C%AC%E5%92%8C%E9%85%8D%E7%BD%AE%E7%AD%96%E7%95%A5%2F</url>
    <content type="text"><![CDATA[组件版本 主要配置策略 组件版本 Kubernetes 1.14.2 Docker 18.09.6-ce Etcd 3.3.13 Flanneld 0.11.0 插件： Coredns Dashboard Metrics-server EFK (elasticsearch、fluentd、kibana) 镜像仓库： docker registry harbor 主要配置策略kube-apiserver： 使用节点本地 nginx 4 层透明代理实现高可用； 关闭非安全端口 8080 和匿名访问； 在安全端口 6443 接收 https 请求； 严格的认证和授权策略 (x509、token、RBAC)； 开启 bootstrap token 认证，支持 kubelet TLS bootstrapping； 使用 https 访问 kubelet、etcd，加密通信； kube-controller-manager： 3 节点高可用； 关闭非安全端口，在安全端口 10252 接收 https 请求； 使用 kubeconfig 访问 apiserver 的安全端口； 自动 approve kubelet 证书签名请求 (CSR)，证书过期后自动轮转； 各 controller 使用自己的 ServiceAccount 访问 apiserver； kube-scheduler： 3 节点高可用； 使用 kubeconfig 访问 apiserver 的安全端口； kubelet： 使用 kubeadm 动态创建 bootstrap token，而不是在 apiserver 中静态配置； 使用 TLS bootstrap 机制自动生成 client 和 server 证书，过期后自动轮转； 在 KubeletConfiguration 类型的 JSON 文件配置主要参数； 关闭只读端口，在安全端口 10250 接收 https 请求，对请求进行认证和授权，拒绝匿名访问和非授权访问； 使用 kubeconfig 访问 apiserver 的安全端口； kube-proxy： 使用 kubeconfig 访问 apiserver 的安全端口； 在 KubeProxyConfiguration 类型的 JSON 文件配置主要参数； 使用 ipvs 代理模式； 集群插件： DNS：使用功能、性能更好的 coredns； Dashboard：支持登录认证； Metric：metrics-server，使用 https 访问 kubelet 安全端口； Log：Elasticsearch、Fluend、Kibana； Registry 镜像库：docker-registry、harbor； from opsnull]]></content>
      <categories>
        <category>个人网站</category>
        <category>教程</category>
      </categories>
      <tags>
        <tag>Kubernetes</tag>
        <tag>Docker</tag>
        <tag>Etcd</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2019%2F08%2F28%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
